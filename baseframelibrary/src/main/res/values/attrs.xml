<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="CarouseView">
        <attr name="carouseHintMode">
            <enum name="point" value="0" />
            <enum name="number" value="1" />
        </attr>
        <attr name="carouseGravity">
            <flag name="top" value="0x30" />
            <flag name="bottom" value="0x50" />
            <flag name="left" value="0x03" />
            <flag name="right" value="0x05" />
            <flag name="center_vertical" value="0x10" />
            <flag name="fill_vertical" value="0x70" />
            <flag name="center_horizontal" value="0x01" />
            <flag name="fill_horizontal" value="0x07" />
            <flag name="center" value="0x11" />
            <flag name="fill" value="0x77" />
            <flag name="clip_vertical" value="0x80" />
            <flag name="clip_horizontal" value="0x08" />
            <flag name="start" value="0x00800003" />
            <flag name="end" value="0x00800005" />
        </attr>
        <attr name="carouseHintPaddingRight" format="dimension" />
        <attr name="carouseHintPaddingLeft" format="dimension" />
        <attr name="carouseHintPaddingTop" format="dimension" />
        <attr name="carouseHintPaddingBottom" format="dimension" />
        <attr name="carousePadding" format="dimension" />

        <attr name="carousePlayDelay" format="integer" />
        <attr name="carousePlayColor" format="color|reference" />
        <attr name="carouseHintAlpha" format="integer" />
        <attr name="automatic" format="boolean" />
    </declare-styleable>
    <declare-styleable name="STabLayout">
        <!-- indicator -->
        <!-- 设置显示器颜色 -->
        <attr name="stlIndicatorColor" format="color" />
        <!-- 设置显示器高度 -->
        <attr name="stlIndicatorHeight" format="dimension" />
        <!-- 设置显示器固定宽度 -->
        <attr name="stlIndicatorWidth" format="dimension" />
        <!-- 设置显示器margin,当indicator_width大于0,无效 -->
        <attr name="stlIndicatorMarginLeft" format="dimension" />
        <attr name="stlIndicatorMarginTop" format="dimension" />
        <attr name="stlIndicatorMarginRight" format="dimension" />
        <attr name="stlIndicatorMarginBottom" format="dimension" />
        <!-- 设置显示器圆角弧度-->
        <attr name="stlIndicatorCornerRadius" format="dimension" />
        <!--&lt;!&ndash; 设置显示器长度与title一样长,只有在STYLE_NORMAL并且indicatorWidth小于零有效&ndash;&gt;-->
        <!--<attr name="stlIndicatorWidthEqualText" format="boolean" />-->
        <!--设置显示器的样式，时候是与title一样长，还是和字体一样-->
        <attr name="stlIndicatorStyle">
            <enum name="normal" value="0" />
            <enum name="equalText" value="1" />
        </attr>

        <!-- underline -->
        <!-- 设置下划线颜色 -->
        <attr name="stlUnderlineColor" format="color" />
        <!-- 设置下划线高度 -->
        <attr name="stlUnderlineHeight" format="dimension" />

        <!-- divider -->
        <!-- 设置分割线颜色 -->
        <attr name="selDividerColor" format="color" />
        <!-- 设置分割线宽度 -->
        <attr name="stlDividerWidth" format="dimension" />
        <!-- 设置分割线的paddingTop和paddingBottom -->
        <attr name="selDividerPadding" format="dimension" />

        <!-- tab -->
        <!-- 设置tab的paddingLeft和paddingRight -->
        <attr name="stlTabPadding" format="dimension" />
        <!-- 设置tab大小等分 -->
        <attr name="stlTabSpaceEqual" format="boolean" />
        <!-- 设置tab固定大小 -->
        <attr name="stlTabWidth" format="dimension" />

        <!-- title -->
        <!-- 设置字体大小 -->
        <attr name="stlTextSize" format="dimension" />
        <!-- 设置字体选中颜色 -->
        <attr name="stlTextFocusColor" format="color" />
        <!-- 设置字体未选中颜色 -->
        <attr name="stlTextNormalColor" format="color" />
        <!-- 设置字体全大写 -->
        <attr name="stlTextAllCaps" format="boolean" />
        <!-- 设置字体加粗 -->
        <attr name="stlTextStyle" format="enum">
            <enum name="NONE" value="0" />
            <enum name="SELECT" value="1" />
            <enum name="BOTH" value="2" />
        </attr>

    </declare-styleable>
    <declare-styleable name="MsgView">
        <!-- 圆角矩形背景色 -->
        <attr name="mv_backgroundColor" format="color" />
        <!-- 圆角弧度,单位dp-->
        <attr name="mv_cornerRadius" format="dimension" />
        <!-- 圆角弧度,单位dp-->
        <attr name="mv_strokeWidth" format="dimension" />
        <!-- 圆角边框颜色-->
        <attr name="mv_strokeColor" format="color" />
        <!-- 圆角弧度是高度一半-->
        <attr name="mv_isRadiusHalfHeight" format="boolean" />
        <!-- 圆角矩形宽高相等,取较宽高中大值-->
        <attr name="mv_isWidthHeightEqual" format="boolean" />
    </declare-styleable>

    <!--switchButton-->
    <declare-styleable name="SwitchButton">
        <attr name="sb_shadow_radius" format="reference|dimension" />
        <attr name="sb_shadow_offset" format="reference|dimension" />
        <attr name="sb_shadow_color" format="reference|color" />
        <attr name="sb_uncheck_color" format="reference|color" />
        <attr name="sb_checked_color" format="reference|color" />

        <attr name="sb_border_width" format="reference|dimension" />
        <attr name="sb_checkline_color" format="reference|color" />
        <attr name="sb_checkline_width" format="reference|dimension" />
        <attr name="sb_uncheckcircle_color" format="reference|color" />
        <attr name="sb_uncheckcircle_width" format="reference|dimension" />
        <attr name="sb_uncheckcircle_radius" format="reference|dimension" />

        <attr name="sb_checked" format="reference|boolean" />
        <attr name="sb_shadow_effect" format="reference|boolean" />
        <attr name="sb_effect_duration" format="reference|integer" />
        <attr name="sb_button_color" format="reference|color" />
        <attr name="sb_show_indicator" format="reference|boolean" />
        <attr name="sb_background" format="reference|color" />
        <attr name="sb_enable_effect" format="reference|boolean" />
    </declare-styleable>
</resources>